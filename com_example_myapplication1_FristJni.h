/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <iostream>
#include <getopt.h>
#include <fstream>
#include <cstdlib>
#include <vector>
#include <string>
#include <iterator>
#include <unordered_map>
#include <algorithm>
#include <sstream>
#include <sys/time.h>
#include "CheckRuntime.hpp"
#include "LoadContainer.hpp"
#include "SetBuilderOptions.hpp"
#include "LoadInputTensor.hpp"
#include "udlExample.hpp"
#include "CreateUserBuffer.hpp"
#include "PreprocessInput.hpp"
#include "SaveOutputTensor.hpp"
#include "Util.hpp"
#ifdef ANDROID
#include <GLES2/gl2.h>
#include "CreateGLBuffer.hpp"
#endif

#include "DlSystem/UserBufferMap.hpp"
#include "DlSystem/UDLFunc.hpp"
#include "DlSystem/IUserBuffer.hpp"
#include "DlContainer/IDlContainer.hpp"
#include "DlSystem/TensorShapeMap.hpp"
#include "SNPE/SNPE.hpp"
#include "SNPE/SNPEBuilder.hpp"
#include "DiagLog/IDiagLog.hpp"

#include <memory>
#include <cassert>
#include "SNPE/SNPE.hpp"
#include <thread>
#include <condition_variable>
#include <mutex>
#include <unistd.h>
#include <list>
#include <algorithm>


#include <android/log.h>
#define TAG "com_example_myapplication2_MyFirstJni"

#define LOGD(...) __android_log_print(ANDROID_LOG_DEBUG,TAG ,__VA_ARGS__) // 定义LOGD类型
#define LOGI(...) __android_log_print(ANDROID_LOG_INFO,TAG ,__VA_ARGS__) // 定义LOGI类型
#define LOGW(...) __android_log_print(ANDROID_LOG_WARN,TAG ,__VA_ARGS__) // 定义LOGW类型
#define LOGE(...) __android_log_print(ANDROID_LOG_ERROR,TAG ,__VA_ARGS__) // 定义LOGE类型
#define LOGF(...) __android_log_print(ANDROID_LOG_FATAL,TAG ,__VA_ARGS__) // 定义LOGF类型
using namespace std;



/* Header for class com_example_myapplication1_FristJni */

#ifndef _Included_com_example_myapplication1_FristJni
#define _Included_com_example_myapplication1_FristJni
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_example_myapplication1_FristJni
 * Method:    TestRes
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_example_myapplication1_FristJni_TestRes
  (JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_com_example_myapplication1_FristJni_InitRes
 (JNIEnv *,jclass);


#ifdef __cplusplus
}
#endif
#endif
